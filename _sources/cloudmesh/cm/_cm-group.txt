
Managing multiple VMs with Cloudmesh cm
=======================================

When you start a cluster of VMs in Cloudmesh CLI, it is required to
specify a group name for the cluster, so that we can manage the cluster
according to the cluster name. In Cloudmesh CLI, you may use group
command to manage groups.

IPython Alias

With the alias command we simply define a new command with the name cm
that we can call directly from IPython. Here we make sure that the
parameters are between "" so that they are properly set. Just execute
the following lines.

.. code:: python

    alias cm cm %s
We are using now one of the methods to call the cm commands in the
following sections.

``group`` command
-----------------

The ``group`` allows us to perform simple grouping of VMs but also
images and flavors. A group is essentially a tuple in which you can add
to a named group a type of an object and its unique name. The group
command allows you to create a group, add items to groups, and list
groups. For more information, one can refer to the manual page.

.. code:: python

    cm "group -h"
To create a group with the name sample-group you can use the command:

.. code:: python

    cm "group create sample-group"
Then you can list the groups with:

.. code:: python

    cm "group list"
To add a VM named sample-vm to the group (make sure the VM exists before
add it), you can use:

.. code:: python

    cm "group add item sample-group vm sample-vm"
To list the elements in a group you can use:

.. code:: python

    cm "group show sample-group"
To delete a VM from a group you can use:

.. code:: python

    cm "group remove item sample-group vm sample-vm"
To delete a group:

.. code:: python

    cm "group remove sample-group"
Please note that deletion of a group does not delete the accociated
objects in that group. It only removes the object that stores the types
and objects for that group.

Working with group
------------------

Groups are conveniently integrated into the cloudmesh shell. You may
include a VM into a group while you create it, delete VMs by groups and
when you create a cluster, a group name has to be provided.

To start a VM and add it to group, you can use the group parameter. If
the group doesn't exist, one will be created:

.. code:: python

    cm "vm start --group=sample"
To delete the virtual machines specified in a group you can use the
command:

.. code:: python

    cm "vm delete --group=sample"
To create multiple vms that are part of a vitual cluster, you need to
provide a group name. If the group doesn't exist, one will be created.
If the group exist and it has VMs in it already, the newly created
virtual machines will be included into the cluster. The following
example will create two virtual machines while assuming the default
cloud, flavor, and image. Make sure you set them before if they have not
been set.

.. code:: python

    cm "cluster create --count=2 --group=sample"