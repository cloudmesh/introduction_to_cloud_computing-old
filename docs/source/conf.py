# -*- coding: utf-8 -*-
#
# Cloudmesh documentation build configuration file, created by
# sphinx-quickstart on Tue Jun 25 15:14:22 2013.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.
    
import sys, os

#bootstrap = True
bootstrap = False
rtd = True
basicstrap = False
readable = False
better_theme = False
kr = False
# foundation_theme = True

if bootstrap: 
    import sphinx_bootstrap_theme
elif rtd:
    import sphinx_rtd_theme
elif basicstrap:
    pass
elif readable:
    import sphinx_readable_theme
elif better_theme:
    from better import better_theme_path
elif kr:
    import sphinx_kr_theme
#elif foundation_theme:
#    import foundation
    
#try:
#    theme = os.environ['SPHINX_THEME']
#except:
#    print "please set the them environment var"
#    print "   SPHINX_THEME bootstrap"
#    sys.exit()


# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#sys.path.insert(0, os.path.abspath('.'))

# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [#'sphinx.ext.autodoc',
              'sphinx.ext.doctest',
              'sphinx.ext.intersphinx',
              'sphinx.ext.todo',
              'sphinx.ext.extlinks',
              'sphinx.ext.graphviz',
              'sphinxcontrib.exceltable',                            
              'sphinx.ext.coverage',
              'sphinx.ext.pngmath',
              'sphinx.ext.mathjax',
              'sphinx.ext.ifconfig',
              'sphinx.ext.viewcode']

extensions.append('sphinxcontrib.autorun')
#extensions.append('hieroglyph')

todo_include_todos=True

if basicstrap:
    extensions += ['sphinxjp.themes.basicstrap']

    html_theme = 'basicstrap'

#if foundation_theme:
#    extensions += ['foundation']
    
    
if readable:
    html_theme_path = [sphinx_readable_theme.get_html_theme_path()]
    html_theme = 'readable'

if better_theme:
    html_theme_path = [better_theme_path]
    html_theme = 'better'

if kr:
    html_theme = 'kr'  # or 'kr_basic'
    html_theme_path = [sphinx_kr_theme.get_html_theme_path()]

extlinks = {
    'jira': ('https://jira.futuregrid.org/browse/%s','issue '),
    'portal': ('https://portal.futuregrid.org/%s','https://portal.futuregrid.org/'),
    'youtube': ('http://www.youtube.com/watch?v=%s',''),
}

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'my Cloudmesh'
copyright = u'2013, myCloudmesh.org/learning'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = 'Learning'
# The full version, including alpha/beta/rc tags.
release = 'Learning'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['unfinished/*', "*/.ipynb_checkpoints/*"]

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False


# -- Options for HTML output ---------------------------------------------------
# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.

#if os.environ['SPHINX_THEME'] == 'bootstrap':
if bootstrap:
    html_theme = 'bootstrap'

    # Theme options are theme-specific and customize the look and feel
    # of a theme further.  For a list of options available for each
    # theme, see the documentation.

    #html_theme_ptions = {}
    
    # Theme options are theme-specific and customize the look and feel
    # of a theme further.

    html_theme_options = {
        # Navigation bar title. (Default: ``project`` value)
        'navbar_title': "my Cloudmesh",

        # Tab name for entire site. (Default: "Site")
        'navbar_site_name': "Site",

        # Global TOC depth for "site" navbar tab. (Default: 1)
        # Switching to -1 shows all levels.
        'globaltoc_depth': -1,

        # Include hidden TOCs in Site navbar?
        #
        # Note: If this is "false", you cannot have mixed ``:hidden:`` and
        # non-hidden ``toctree`` directives in the same page, or else the build
        # will break.
        #
        # Values: "true" (default) or "false"
        'globaltoc_includehidden': "true",

        # HTML navbar class (Default: "navbar") to attach to <div> element.
        # For black navbar, do "navbar navbar-inverse"
        #'navbar_class': "navbar",
        'navbar_class': "navbar navbar-inverse",

        # Fix navigation bar to top of page?
        # Values: "true" (default) or "false"
        'navbar_fixed_top': "true",

        # Location of link to source.
        # Options are "nav" (default), "footer" or anything else to exclude.
        'source_link_position': "nav",

        # Bootswatch (http://bootswatch.com/) theme.
        #
        # Options are nothing with "" (default) or the name of a valid theme
        # such as "amelia" or "cosmo".
        #
        # Note that this is served off CDN, so won't be available offline.
        #'bootswatch_theme': "cosmo",
    }

    # Add any paths that contain custom themes here, relative to this directory.
    #html_theme_path = []
    html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()
elif rtd:
    html_theme = 'sphinx_rtd_theme'
    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
#elif foundation_theme:
#    print "CCCC"
#    sys.path[0:0] = [os.path.abspath('_themes/foundation-sphinx-theme')]
#    html_theme_path = ['_themes/foundation-sphinx-theme']
#    html_theme = 'foundation'
#    html_theme_options = {
#        'stylesheet': 'foundation/css/basic.css',
#        'motto': 'Lorem ipsum dolor sit amet, magna offendit similique ne nec. Ex doming sanctus labores pro, est ne dico simul laboramus.',
#        #'google_analytics_id': 'UA-40554445-2',
#        #'social_buttons': True,
#        #'base_url': 'html',
#        #'facebook_app_id': '245101572296049',
#        #'twitter_id': 'FoundationSphinx',
#        # 'author': 'Gregor von Laszewski',
#        # 'author_link': 'http://gregor.cyberaide.org',
#        #'google_plus_id': '117034840853387702598',
#        # 'copyright_year': '2013',
#        #'github_ribbon_image': 'github-ribbon.png',
#        'seo_description': 'This is an example of the Foundation Sphinx Theme output.',
#        # 'github_user': 'peterhudec',
#        # 'github_repo': 'foundation-sphinx-theme',
#        #'flattr_id': 'peterhudec',
#    }


    
# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = "images/cm-logo-24.png"

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


#def setup(app):
#   #app.add_javascript("custom.js")
#   app.add_stylesheet("my_theme.css")

#html_style = 'css/my_theme.css' 
html_context = {
    'css_files': [
        '_static/css/my_theme.css',  # overrides for wide tables in RTD theme
        ],
    }

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

#if os.environ['SPHINX_THEME'] == 'bootstrap':
if bootstrap:
    html_sidebars = {
       '**': ['menu.html',
                 'localtoc.html',
                 #'relations.html',
                 'searchbox.html',
                 'sourcelink.html',
                ],
       'index': ['menu.html',
                 'localtoc.html',
                 #'relations.html',
                 'searchbox.html',
                 'sourcelink.html',
                ],
    }
#else:
#    html_sidebars = {
#       '**': ['menu.html',
#                 'localtoc.html',
#                 'relations.html',
#                 'searchbox.html',
#                 'sourcelink.html',
#                ],
#       'index': ['menu.html',
#                 'localtoc.html',
#                 'relations.html',
#                 'searchbox.html',
#                 'sourcelink.html',
#                ],
#    }

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = False

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'Cloudmeshdoc'


# -- Options for LaTeX output --------------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
#'papersize': 'letterpaper',

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
  ('index', 'myCloudmesh.tex', u'Introduction to Cloud Computing',
   u'Editor: Gregor von Laszewski', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = True

# If true, show URL addresses after external links.
#latex_show_urls = True

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'cloudmesh', u'Cloudmesh',
     [u'Gregor von Laszewski'], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output ------------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  ('index', 'Cloudmesh', u'Cloudmesh',
   u'Gregor von Laszewski', 'Cloudmesh', 'One line description of project.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False


# -- Options for Epub output ---------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = u'Introduction to Cloud Computing'
epub_author = u'Editor: Gregor von Laszewski'
epub_publisher = u'Gregor von Laszewski'
epub_copyright = u'2013, myCloudmesh.org'

# The language of the text. It defaults to the language option
# or en if the language is not set.
#epub_language = ''

# The scheme of the identifier. Typical schemes are ISBN or URL.
#epub_scheme = ''

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
epub_identifier = 'http://myCloudmesh.org/learning'

# A unique identification for the text.
#epub_uid = ''

# A tuple containing the cover image and cover page html template filenames.
#epub_cover = ()

# A sequence of (type, uri, title) tuples for the guide element of content.opf.
#epub_guide = ()

# HTML files that should be inserted before the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_pre_files = []

# HTML files shat should be inserted after the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_post_files = []

# A list of files that should not be packed into the epub file.
#epub_exclude_files = []

# The depth of the table of contents in toc.ncx.
#epub_tocdepth = 3

# Allow duplicate toc entries.
#epub_tocdup = True

# Fix unsupported image types using the PIL.
#epub_fix_images = False

# Scale large images.
#epub_max_image_width = 0

# If 'no', URL addresses will not be shown.
#epub_show_urls = 'inline'

# If false, no index is generated.
#epub_use_index = True


# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'http://docs.python.org/': None}
